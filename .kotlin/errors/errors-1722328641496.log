kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/data/Android Studio Projects/sdg8www/app/src/main/java/com/app/sdg8www/BakingScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:BakingScreen visibility:public modality:FINAL <> (viewModel:com.app.sdg8www.BakingViewModel) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:viewModel index:0 type:com.app.sdg8www.BakingViewModel
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=com.app.sdg8www.BakingViewModel
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:uiState$delegate type:androidx.compose.runtime.State<com.app.sdg8www.UiState> [val]
      TYPE_OP type=androidx.compose.runtime.State<com.app.sdg8www.UiState> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<com.app.sdg8www.UiState>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: com.app.sdg8www.UiState
          $receiver: CALL 'public final fun <get-uiState> (): kotlinx.coroutines.flow.StateFlow<com.app.sdg8www.UiState> declared in com.app.sdg8www.BakingViewModel' type=kotlinx.coroutines.flow.StateFlow<com.app.sdg8www.UiState> origin=GET_PROPERTY
            $this: GET_VAR 'viewModel: com.app.sdg8www.BakingViewModel declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=com.app.sdg8www.BakingViewModel origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:selectedIndex$delegate type:androidx.compose.runtime.MutableIntState [val]
      TYPE_OP type=androidx.compose.runtime.MutableIntState origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.MutableIntState
        CALL 'public final fun rememberSaveable$default <T> (vararg inputs: kotlin.Any?, saver: androidx.compose.runtime.saveable.Saver<T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default, out kotlin.Any>?, key: kotlin.String?, init: kotlin.Function0<T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default>, $mask0: kotlin.Int, $handler: kotlin.Any?): T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default declared in androidx.compose.runtime.saveable.RememberSaveableKt' type=T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default origin=DEFAULT_DISPATCH_CALL
          <T>: androidx.compose.runtime.MutableIntState
          inputs: CALL 'public final fun arrayOfNulls <T> (size: kotlin.Int): kotlin.Array<T of kotlin.arrayOfNulls?> declared in kotlin' type=kotlin.Array<out kotlin.Any?> origin=null
            <T>: kotlin.Any?
            size: CONST Int type=kotlin.Int value=0
          saver: COMPOSITE type=androidx.compose.runtime.saveable.Saver<T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default, out kotlin.Any>? origin=DEFAULT_VALUE
            CONST Null type=androidx.compose.runtime.saveable.Saver<T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default, out kotlin.Any>? value=null
          key: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
            CONST Null type=kotlin.String? value=null
          init: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableIntState> origin=LAMBDA
            COMPOSITE type=kotlin.Unit origin=null
            CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<androidx.compose.runtime.MutableIntState> origin=null
              <T>: kotlin.Function0<androidx.compose.runtime.MutableIntState>
              dynamicCall: CALL 'public final fun invoke (): kotlin.Function0<androidx.compose.runtime.MutableIntState> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<androidx.compose.runtime.MutableIntState> origin=null
              bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                tag: CONST Int type=kotlin.Int value=6
                owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                name: CONST String type=kotlin.String value="metafactory"
                descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                isInterface: CONST Boolean type=kotlin.Boolean value=false
              bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
                RAW_FUNCTION_REFERENCE 'private final fun BakingScreen$lambda$1 (): androidx.compose.runtime.MutableIntState declared in com.app.sdg8www.BakingScreenKt' type=kotlin.Any
                CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): androidx.compose.runtime.MutableIntState [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
          $mask0: CONST Int type=kotlin.Int value=6
          $handler: CONST Null type=kotlin.Any? value=null
    VAR name:promptPlaceholder type:kotlin.String [val]
      CALL 'public final fun stringResource (id: kotlin.Int): kotlin.String declared in androidx.compose.ui.res.StringResources_androidKt' type=kotlin.String origin=null
        id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:prompt_placeholder type:kotlin.Int visibility:public [static]' type=kotlin.Int origin=null
    VAR PROPERTY_DELEGATE name:prompt$delegate type:androidx.compose.runtime.MutableState<kotlin.String> [val]
      TYPE_OP type=androidx.compose.runtime.MutableState<kotlin.String> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.MutableState<kotlin.String>
        CALL 'public final fun rememberSaveable$default <T> (vararg inputs: kotlin.Any?, saver: androidx.compose.runtime.saveable.Saver<T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default, out kotlin.Any>?, key: kotlin.String?, init: kotlin.Function0<T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default>, $mask0: kotlin.Int, $handler: kotlin.Any?): T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default declared in androidx.compose.runtime.saveable.RememberSaveableKt' type=T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default origin=DEFAULT_DISPATCH_CALL
          <T>: androidx.compose.runtime.MutableState<kotlin.String>
          inputs: CALL 'public final fun arrayOfNulls <T> (size: kotlin.Int): kotlin.Array<T of kotlin.arrayOfNulls?> declared in kotlin' type=kotlin.Array<out kotlin.Any?> origin=null
            <T>: kotlin.Any?
            size: CONST Int type=kotlin.Int value=0
          saver: COMPOSITE type=androidx.compose.runtime.saveable.Saver<T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default, out kotlin.Any>? origin=DEFAULT_VALUE
            CONST Null type=androidx.compose.runtime.saveable.Saver<T of androidx.compose.runtime.saveable.RememberSaveableKt.rememberSaveable$default, out kotlin.Any>? value=null
          key: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
            CONST Null type=kotlin.String? value=null
          init: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=LAMBDA
            COMPOSITE type=kotlin.Unit origin=null
            CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=null
              <T>: kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>>
              dynamicCall: CALL 'public final fun invoke (p0: kotlin.String): kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=null
                p0: GET_VAR 'val promptPlaceholder: kotlin.String [val] declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=kotlin.String origin=null
              bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                tag: CONST Int type=kotlin.Int value=6
                owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                name: CONST String type=kotlin.String value="metafactory"
                descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                isInterface: CONST Boolean type=kotlin.Boolean value=false
              bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
                RAW_FUNCTION_REFERENCE 'private final fun BakingScreen$lambda$4 ($promptPlaceholder: kotlin.String): androidx.compose.runtime.MutableState<kotlin.String> declared in com.app.sdg8www.BakingScreenKt' type=kotlin.Any
                CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): androidx.compose.runtime.MutableState<kotlin.String> [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
          $mask0: CONST Int type=kotlin.Int value=6
          $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:isPromptFocused$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.Boolean>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun BakingScreen$lambda$7 (): androidx.compose.runtime.MutableState<kotlin.Boolean> declared in com.app.sdg8www.BakingScreenKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR name:teal200 type:androidx.compose.ui.graphics.Color [val]
      CALL 'public final fun colorResource (id: kotlin.Int): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.res.ColorResources_androidKt' type=androidx.compose.ui.graphics.Color origin=null
        id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:teal_200 type:kotlin.Int visibility:public [static]' type=kotlin.Int origin=null
    VAR name:black type:androidx.compose.ui.graphics.Color [val]
      CALL 'public final fun colorResource (id: kotlin.Int): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.res.ColorResources_androidKt' type=androidx.compose.ui.graphics.Color origin=null
        id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:black type:kotlin.Int visibility:public [static]' type=kotlin.Int origin=null
    CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun padding-3ABfNKs (all: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=null
        $receiver: CALL 'public final fun verticalScroll$default (state: androidx.compose.foundation.ScrollState, enabled: kotlin.Boolean, flingBehavior: androidx.compose.foundation.gestures.FlingBehavior?, reverseScrolling: kotlin.Boolean, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.ScrollKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: CALL 'public final fun fillMaxSize$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
            $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static]' type=androidx.compose.ui.Modifier.Companion origin=null
            fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
              CONST Float type=kotlin.Float value=0.0
            $mask0: CONST Int type=kotlin.Int value=1
            $handler: CONST Null type=kotlin.Any? value=null
          state: CALL 'public final fun rememberScrollState$default (initial: kotlin.Int, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.foundation.ScrollState declared in androidx.compose.foundation.ScrollKt' type=androidx.compose.foundation.ScrollState origin=DEFAULT_DISPATCH_CALL
            initial: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
              CONST Int type=kotlin.Int value=0
            $mask0: CONST Int type=kotlin.Int value=1
            $handler: CONST Null type=kotlin.Any? value=null
          enabled: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
            CONST Boolean type=kotlin.Boolean value=false
          flingBehavior: COMPOSITE type=androidx.compose.foundation.gestures.FlingBehavior? origin=DEFAULT_VALUE
            CONST Null type=androidx.compose.foundation.gestures.FlingBehavior? value=null
          reverseScrolling: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
            CONST Boolean type=kotlin.Boolean value=false
          $mask0: CONST Int type=kotlin.Int value=14
          $handler: CONST Null type=kotlin.Any? value=null
        all: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $receiver: CONST Int type=kotlin.Int value=16
      verticalArrangement: COMPOSITE type=androidx.compose.foundation.layout.Arrangement.Vertical? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.layout.Arrangement.Vertical? value=null
      horizontalAlignment: CALL 'public final fun <get-CenterHorizontally> (): androidx.compose.ui.Alignment.Horizontal declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment.Horizontal origin=GET_PROPERTY
        $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static]' type=androidx.compose.ui.Alignment.Companion origin=null
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun BakingScreen$lambda$19 ($teal200: androidx.compose.ui.graphics.Color, $black: androidx.compose.ui.graphics.Color, $selectedIndex$delegate: androidx.compose.runtime.MutableIntState, $prompt$delegate: androidx.compose.runtime.MutableState<kotlin.String>, $promptPlaceholder: kotlin.String, $isPromptFocused$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>, $viewModel: com.app.sdg8www.BakingViewModel, $uiState$delegate: androidx.compose.runtime.State<com.app.sdg8www.UiState>): kotlin.Unit declared in com.app.sdg8www.BakingScreenKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $teal200: GET_VAR 'val teal200: androidx.compose.ui.graphics.Color [val] declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=androidx.compose.ui.graphics.Color origin=null
          $black: GET_VAR 'val black: androidx.compose.ui.graphics.Color [val] declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=androidx.compose.ui.graphics.Color origin=null
          $selectedIndex$delegate: GET_VAR 'val selectedIndex$delegate: androidx.compose.runtime.MutableIntState [val] declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=androidx.compose.runtime.MutableIntState origin=null
          $prompt$delegate: GET_VAR 'val prompt$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null
          $promptPlaceholder: GET_VAR 'val promptPlaceholder: kotlin.String [val] declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=kotlin.String origin=null
          $isPromptFocused$delegate: GET_VAR 'val isPromptFocused$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
          $viewModel: GET_VAR 'viewModel: com.app.sdg8www.BakingViewModel declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=com.app.sdg8www.BakingViewModel origin=null
          $uiState$delegate: GET_VAR 'val uiState$delegate: androidx.compose.runtime.State<com.app.sdg8www.UiState> [val] declared in com.app.sdg8www.BakingScreenKt.BakingScreen' type=androidx.compose.runtime.State<com.app.sdg8www.UiState> origin=null
      $mask0: CONST Int type=kotlin.Int value=2
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 55 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 70 more


